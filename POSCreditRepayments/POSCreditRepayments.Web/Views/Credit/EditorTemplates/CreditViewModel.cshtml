@model POSCreditRepayments.Web.ViewModels.Credits.CreditViewModel

<div class="form-group">
    @Html.LabelFor(m => m.Product.Price, new { @class = "col-md-4 control-label" })
    <div class="col-md-8">
        @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control", type = "number" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.FinancialInstitutions, new { @class = "col-md-4 control-label" })
    <div class="col-md-8">
        @Html.DropDownListFor(m => m.SelectedFinancialInstitutions, Model.FinancialInstitutions)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Downpayment, new { @class = "col-md-4 control-label" })
    <div class="col-md-8">
        @Html.TextBoxFor(m => m.Downpayment, new { @class = "form-control", type = "number" })
    </div>
    @Html.ValidationMessageFor(m => m, string.Empty, new { @class = "text-danger col-md-offset-1" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Term, new { @class = "col-md-4 control-label" })
    <div class="col-md-8">
        @Html.TextBoxFor(m => m.Term, new { @class = "form-control", type = "number" })
    </div>
    @Html.ValidationMessageFor(m => m, string.Empty, new { @class = "text-danger col-md-offset-1" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.HasInsurance, new { @class = "col-md-4 control-label" })
    <div class="col-md-1">
        @{
            decimal insurance = Math.Round(Model.Product.Price * 3.3m / 100, 2);
        }
        @insurance lv.
    </div>
    <div class="col-md-1">
        @Html.CheckBoxFor(m => m.HasInsurance, new { @class = "form-control" })
    </div>
    @Html.ValidationMessageFor(m => m, string.Empty, new { @class = "text-danger col-md-offset-1" })
</div>